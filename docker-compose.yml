version: "3.9"

services:
  # LiveKit Agent Service
  agent:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: livekit-agent
    environment:
      - LIVEKIT_URL=${LIVEKIT_URL}
      - LIVEKIT_API_KEY=${LIVEKIT_API_KEY}
      - LIVEKIT_API_SECRET=${LIVEKIT_API_SECRET}
      - DEEPGRAM_API_KEY=${DEEPGRAM_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - CARTESIA_API_KEY=${CARTESIA_API_KEY}
    command: python main.py start
    networks:
      - lk
    depends_on:
      - livekit
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Flask Web Server
  web:
    build:
      context: .
      dockerfile: web/Dockerfile
    container_name: livekit-web
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - LIVEKIT_URL=${LIVEKIT_URL}
      - LIVEKIT_API_KEY=${LIVEKIT_API_KEY}
      - LIVEKIT_API_SECRET=${LIVEKIT_API_SECRET}
      - DEEPGRAM_API_KEY=${DEEPGRAM_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - CARTESIA_API_KEY=${CARTESIA_API_KEY}
    networks:
      - lk
    depends_on:
      - agent
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: LiveKit Server (if you want local deployment)
  livekit:
    image: livekit/livekit-server:latest
    container_name: livekit-server
    command: --dev --config /etc/livekit.yaml
    ports:
      - "7880:7880"    # HTTP
      - "7881:7881"    # HTTPS
      - "7882:7882"    # WebSocket
    volumes:
      - ./livekit.yaml:/etc/livekit.yaml
    networks:
      - lk
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  lk:
    driver: bridge